pipeline {
    agent any
    parameters {
        string(name: 'USER_NAME', description: 'Your full name')
        string(name: 'USER_ADDRESS', description: 'Your address')
        string(name: 'USER_CITY', description: 'Your city')
        string(name: 'USER_TELEPHONE', description: 'Your telephone number')
        string(name: 'PET_NAME', description: 'Your pet\'s name')
        choice(name: 'PET_TYPE', choices: ['cat', 'dog', 'lizard', 'snake', 'bird', 'hamster'], description: 'Type of pet')
        string(name: 'PET_BIRTH_DATE', defaultValue: '2020/01/01', description: 'Pet\'s birth date (YYYY/MM/DD)')
        string(name: 'ENVIRONMENT', defaultValue: 'dev', description: 'Environment to deploy to (dev/staging/prod)')
    }
    stages {
        stage('Validate Input') {
            steps {
                script {
                    if (!params.USER_NAME?.trim() || params.USER_NAME.split().size() < 2) {
                        error 'Please provide both first and last name'
                    }
                    def requiredFields = [
                        'USER_ADDRESS': params.USER_ADDRESS,
                        'USER_CITY': params.USER_CITY,
                        'USER_TELEPHONE': params.USER_TELEPHONE,
                        'PET_NAME': params.PET_NAME
                    ]
                    requiredFields.each { field, value ->
                        if (!value?.trim()) {
                            error "${field.toLowerCase().replace('_', ' ')} cannot be empty"
                        }
                    }
                    if (!params.USER_TELEPHONE.matches('^[0-9]{10}$')) {
                        error 'Telephone must be 10 digits'
                    }
                    if (!params.PET_BIRTH_DATE.matches('^\\d{4}/\\d{2}/\\d{2}$')) {
                        error 'Birth date must be in YYYY/MM/DD format'
                    }
                    if (!['dev', 'staging', 'prod'].contains(params.ENVIRONMENT)) {
                        error 'Environment must be one of: dev, staging, prod'
                    }
                }
            }
        }
    }
} 